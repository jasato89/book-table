{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet BookingSystemPage = class BookingSystemPage {\n  constructor(authService, toastService, alertController, router, platform, safariViewController, inAppBrowser) {\n    this.authService = authService;\n    this.toastService = toastService;\n    this.alertController = alertController;\n    this.router = router;\n    this.platform = platform;\n    this.safariViewController = safariViewController;\n    this.inAppBrowser = inAppBrowser;\n    this.postData = {\n      id_user: ''\n    };\n    this.postPetition = {\n      id_petition: ''\n    };\n  }\n\n  ngOnInit() {}\n\n  ionViewWillEnter() {\n    this.hasPaymentMethod();\n    this.getBookingsForBusinessUser();\n    this.getBookingPetitions();\n    this.getLastBookingsUserBusiness();\n  }\n\n  createBooking() {\n    var prueba = window.matchMedia('(prefers-color-scheme: white)').matches;\n    console.log('Modo oscuro? : ', prueba);\n    this.router.navigate(['home/tabs/booking-system/booking-create']);\n  }\n\n  modifyBooking(item) {\n    let navigationExtras = {\n      state: {\n        item: item\n      }\n    };\n    this.router.navigate(['home/tabs/booking-system/booking-details'], navigationExtras);\n  }\n\n  convertDateForIos(date) {\n    var arr = date.split(/[. :]/);\n    date = new Date(arr[0], arr[1] - 1, arr[2], arr[3], arr[4]);\n    var dateStr = (\"00\" + date.getDate()).slice(-2) + \"/\" + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"/\" + date.getFullYear() + \" \" + (\"00\" + date.getHours()).slice(-2) + \":\" + (\"00\" + date.getMinutes()).slice(-2);\n    return dateStr;\n  }\n\n  hasPaymentMethod() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.postData.id_user = window.localStorage.getItem('id_user');\n      this.authService.hasPaymentMethod(this.postData).subscribe(res => {\n        this.havePaymentMethod = res;\n      });\n    });\n  }\n\n  getBookingPetitions() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.postData.id_user = window.localStorage.getItem('id_user');\n      this.authService.getBookingPetitions(this.postData).subscribe(res => {\n        this.myActivePetitions = res;\n\n        if (this.myActivePetitions.length == 0) {\n          this.haveActivePetitions = false;\n        } else {\n          this.haveActivePetitions = true;\n          this.myActivePetitions.forEach(element => {\n            var date = this.convertDateForIos(element.time_trame);\n            element.time_trame = date;\n          });\n        }\n      }, error => {\n        this.toastService.presentToast('Problème de réseau.');\n      });\n    });\n  }\n\n  getBookingsForBusinessUser() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.postData.id_user = window.localStorage.getItem('id_user');\n      console.log(\"Antes de obtener las reservas.\");\n      console.log(window.localStorage.getItem('id_user'));\n      this.authService.getBookingsForBusinessUser(this.postData).subscribe(res => {\n        this.myActiveBookings = res;\n        console.log(\"Antes de recorrer una reserva\");\n        this.myActiveBookings.forEach(element => {\n          var hoy = new Date(); //Fecha actual del sistema\n\n          var fechaFormateada = element.created_at;\n          var fechaHoy = hoy.toLocaleDateString(\"en-CA\");\n          var fechaFinal = fechaFormateada.slice(0, 10);\n          console.log(fechaFinal !== fechaHoy);\n          console.log(fechaFinal);\n          console.log(fechaHoy); // if (fechaFinal == fechaHoy) {\n          //   element.fechaFormat = 0;\n          // }else {\n          //   element.fechaFormat = 1;\n          //   if(element.pending == 1){\n          //     element.pending_text = \"En attente\";\n          //   }\n          // }\n\n          if (element.pending == 1 && fechaFinal == fechaHoy) {\n            element.fechaFormat = 3;\n            element.pending_text = \"En attente\";\n          } else if (element.pending == 1 && fechaFinal > fechaHoy) {\n            element.pending_text = \"Non Réservée\";\n            element.fechaFormat = 1;\n          } else if (element.pending == 0 && fechaFinal == fechaHoy) {\n            element.pending_text = \"Réservée\";\n            element.fechaFormat = 0;\n          } else {\n            element.pending_text = \"Réservée\";\n            element.fechaFormat = 1;\n          }\n\n          if (element.turns == 1) {\n            element.turn_text = \"Midi\";\n          } else {\n            element.turn_text = \"Soir\";\n          }\n        });\n        console.log(this.myActiveBookings);\n        console.log(\"Despues de recorrer una reserva\");\n\n        if (this.myActiveBookings.length == 0) {\n          this.haveActiveBookings = false;\n        } else {\n          this.haveActiveBookings = true;\n        }\n\n        this.myActiveBookings = this.myActiveBookings.sort(function (a, b) {\n          return b.id - a.id;\n        });\n      }, error => {\n        this.toastService.presentToast('Problème de réseau.');\n      });\n      console.log(this.myActiveBookings);\n      console.log(\"Despues de obtener las reservas.\");\n    });\n  }\n\n  getLastBookingsUserBusiness() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.postData.id_user = window.localStorage.getItem('id_user');\n      this.authService.getLastBookingsUserBusiness(this.postData).subscribe(res => {\n        this.myLastBookings = res;\n\n        if (this.myLastBookings) {\n          if (this.myLastBookings.length == 0) {\n            this.haveLastBookings = false;\n          } else {\n            this.haveLastBookings = true;\n          }\n        }\n      }, error => {\n        this.toastService.presentToast('Problème de réseau.');\n      });\n    });\n  }\n\n  viewPetition(item) {\n    this.alertController.create({\n      mode: 'ios',\n      header: 'Nouvelle demande de réservation',\n      subHeader: 'Voulez-vous accepter la réservation de ce client ?',\n      buttons: [{\n        text: 'Non',\n        handler: data => {\n          this.cancelPetition(item);\n        }\n      }, {\n        text: 'Oui',\n        handler: data => {\n          //CREAR PETICION\n          this.acceptPetition(item);\n        }\n      }]\n    }).then(res => {\n      res.present();\n    });\n  }\n\n  acceptPetition(item) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.postPetition.id_petition = item.id;\n      this.authService.acceptPetition(this.postPetition).subscribe(res => {\n        this.getBookingsForBusinessUser();\n        this.getBookingPetitions();\n      }, error => {});\n    });\n  }\n\n  cancelPetition(item) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.postPetition.id_petition = item.id;\n      this.authService.cancelPetition(this.postPetition).subscribe(res => {\n        this.getBookingsForBusinessUser();\n        this.getBookingPetitions();\n      }, error => {});\n    });\n  }\n\n  goToPanel() {\n    this.safariViewController.isAvailable().then(available => {\n      if (available) {\n        this.safariViewController.show({\n          url: 'https://panel.booktable.app/admin/',\n          hidden: false,\n          animated: false,\n          transition: 'curl',\n          enterReaderModeIfAvailable: true,\n          tintColor: '#00ba5c'\n        }).subscribe(result => {\n          if (result.event === 'opened') console.log('Opened');else if (result.event === 'loaded') console.log('Loaded');else if (result.event === 'closed') console.log('Closed');\n        }, error => console.error(error));\n      } else {\n        // Opening a URL and returning an InAppBrowserObject\n        const browser = this.inAppBrowser.create('https://panel.booktable.app/admin/', '_system', 'location=yes');\n      }\n    });\n  }\n\n};\nBookingSystemPage = __decorate([Component({\n  selector: 'app-booking-system',\n  templateUrl: './booking-system.page.html',\n  styleUrls: ['./booking-system.page.scss']\n})], BookingSystemPage);\nexport { BookingSystemPage };","map":null,"metadata":{},"sourceType":"module"}