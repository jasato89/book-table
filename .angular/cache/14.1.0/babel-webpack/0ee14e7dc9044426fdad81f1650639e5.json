{"ast":null,"code":"import { PushNotifications } from '@capacitor/push-notifications';\nimport { Capacitor } from '@capacitor/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../../services/auth.service\";\nimport * as i4 from \"@ionic-native/badge/ngx\";\nimport * as i5 from \"@angular/common\";\n\nfunction TabsPage_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-tab-bar\", 2)(2, \"ion-tab-button\", 3);\n    i0.ɵɵelement(3, \"ion-icon\", 4);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"Accueil\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"ion-tab-button\", 5);\n    i0.ɵɵelement(7, \"ion-icon\", 6);\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9, \"Recherche\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"ion-tab-button\", 7);\n    i0.ɵɵelement(11, \"ion-icon\", 8);\n    i0.ɵɵelementStart(12, \"p\");\n    i0.ɵɵtext(13, \"Favoris\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"ion-tab-button\", 9);\n    i0.ɵɵelement(15, \"ion-icon\", 10);\n    i0.ɵɵelementStart(16, \"p\");\n    i0.ɵɵtext(17, \"R\\u00E9servations\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction TabsPage_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-tab-bar\", 2)(2, \"ion-tab-button\", 11);\n    i0.ɵɵelement(3, \"ion-icon\", 12);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"Syst\\u00E8me de r\\u00E9servation\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"ion-tab-button\", 13);\n    i0.ɵɵelement(7, \"ion-icon\", 14);\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9, \"Profil\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nconst isPushNotificationsAvailable = Capacitor.isPluginAvailable('PushNotifications');\nexport let TabsPage = /*#__PURE__*/(() => {\n  class TabsPage {\n    constructor(navCtrl, router, authService, alertController, badge) {\n      this.navCtrl = navCtrl;\n      this.router = router;\n      this.authService = authService;\n      this.alertController = alertController;\n      this.badge = badge;\n      this.postData = {\n        id_user: '',\n        device_token: ''\n      };\n    }\n\n    ngOnInit() {\n      this.setRole();\n\n      if (isPushNotificationsAvailable) {\n        this.initPushNotifications();\n      }\n    }\n\n    initPushNotifications() {\n      console.log('Initializing Notifications System'); // Request permission to use push notifications\n      // iOS will prompt user and return if they granted permission or not\n      // Android will just grant without prompting\n\n      PushNotifications.requestPermissions().then(result => {\n        if (result.receive === \"granted\") {\n          // Register with Apple / Google to receive push via APNS/FCM\n          PushNotifications.register();\n        } else {// Show some error\n        }\n      });\n      PushNotifications.addListener('registration', token => {\n        console.log('Push registration success, token: ' + token.value);\n        console.log(token);\n\n        if (token.value) {\n          this.registerDeviceToken(token.value);\n        }\n      });\n      PushNotifications.addListener('registrationError', error => {\n        console.log('Error on registration: ' + JSON.stringify(error));\n      });\n      PushNotifications.addListener('pushNotificationReceived', notification => {\n        console.log('Push received: ' + JSON.stringify(notification));\n        this.badge.increase(1);\n        this.createNotification(notification);\n      });\n      PushNotifications.addListener('pushNotificationActionPerformed', notification => {\n        console.log('Push action performed: ' + JSON.stringify(notification));\n      });\n    }\n\n    setRole() {\n      this.role = window.localStorage.getItem('role');\n      this.isUser = false;\n      this.isBusiness = false;\n      this.badge.clear();\n\n      switch (this.role) {\n        case \"2\":\n          this.isUser = true;\n          break;\n\n        case \"3\":\n          this.isBusiness = true;\n          this.router.navigate(['home/tabs/booking-system']);\n          break;\n\n        default:\n          this.isUser = true;\n          break;\n      }\n    }\n\n    registerDeviceToken(token) {\n      this.postData.id_user = window.localStorage.getItem('id_user');\n      this.postData.device_token = token;\n      this.authService.registerTokenDevice(this.postData).subscribe(res => {\n        console.log(res);\n      }, error => {});\n    }\n\n    createNotification(notification) {\n      this.alertController.create({\n        mode: 'ios',\n        header: 'BookTable',\n        subHeader: notification.title,\n        message: notification.body,\n        buttons: [{\n          text: 'Ok',\n          handler: data => {}\n        }]\n      }).then(res => {\n        res.present();\n      });\n    }\n\n  }\n\n  TabsPage.ɵfac = function TabsPage_Factory(t) {\n    return new (t || TabsPage)(i0.ɵɵdirectiveInject(i1.NavController), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i1.AlertController), i0.ɵɵdirectiveInject(i4.Badge));\n  };\n\n  TabsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TabsPage,\n    selectors: [[\"app-tabs\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[\"name\", \"myTabsNav\"], [4, \"ngIf\"], [\"slot\", \"bottom\"], [\"tab\", \"tab1\"], [\"name\", \"home-outline\"], [\"tab\", \"tab2\"], [\"name\", \"compass-outline\"], [\"tab\", \"tab3\"], [\"name\", \"heart-outline\"], [\"tab\", \"tab4\"], [\"name\", \"bookmarks-outline\"], [\"tab\", \"booking-system\"], [\"name\", \"restaurant-outline\"], [\"tab\", \"user-profile\"], [\"name\", \"person-circle-outline\"]],\n    template: function TabsPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-tabs\", 0);\n        i0.ɵɵtemplate(1, TabsPage_ng_container_1_Template, 18, 0, \"ng-container\", 1);\n        i0.ɵɵtemplate(2, TabsPage_ng_container_2_Template, 10, 0, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isUser);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isBusiness);\n      }\n    },\n    dependencies: [i1.IonIcon, i1.IonTabBar, i1.IonTabButton, i1.IonTabs, i5.NgIf],\n    styles: [\"ion-tab-bar[_ngcontent-%COMP%]{height:60px;--background: linear-gradient(180deg, rgba(0,186,92,1) 0%, rgba(0,136,150,1) 90%)}p[_ngcontent-%COMP%]{margin:0;color:#000;font-size:9pt}ion-tab-button[_ngcontent-%COMP%]{color:#000}\"]\n  });\n  return TabsPage;\n})();","map":null,"metadata":{},"sourceType":"module"}