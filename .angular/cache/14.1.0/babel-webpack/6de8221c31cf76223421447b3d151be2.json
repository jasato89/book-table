{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\n\nvar FirebaseAnalytics =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseAnalytics, _super);\n\n  function FirebaseAnalytics() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FirebaseAnalytics.prototype.logEvent = function (name, params) {\n    return cordova(this, \"logEvent\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  FirebaseAnalytics.prototype.setUserId = function (id) {\n    return cordova(this, \"setUserId\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  FirebaseAnalytics.prototype.setUserProperty = function (name, value) {\n    return cordova(this, \"setUserProperty\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  FirebaseAnalytics.prototype.setEnabled = function (enabled) {\n    return cordova(this, \"setEnabled\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  FirebaseAnalytics.prototype.setCurrentScreen = function (name) {\n    return cordova(this, \"setCurrentScreen\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  FirebaseAnalytics.prototype.resetAnalyticsData = function () {\n    return cordova(this, \"resetAnalyticsData\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  FirebaseAnalytics.pluginName = \"FirebaseAnalytics\";\n  FirebaseAnalytics.plugin = \"cordova-plugin-firebase-analytics\";\n  FirebaseAnalytics.pluginRef = \"cordova.plugins.firebase.analytics\";\n  FirebaseAnalytics.repo = \"https://github.com/chemerisuk/cordova-plugin-firebase-analytics\";\n  FirebaseAnalytics.platforms = [\"Android\", \"iOS\"];\n\n  FirebaseAnalytics.ɵfac = /*@__PURE__*/function () {\n    var ɵFirebaseAnalytics_BaseFactory;\n    return function FirebaseAnalytics_Factory(t) {\n      return (ɵFirebaseAnalytics_BaseFactory || (ɵFirebaseAnalytics_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FirebaseAnalytics)))(t || FirebaseAnalytics);\n    };\n  }();\n\n  FirebaseAnalytics.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FirebaseAnalytics,\n    factory: function (t) {\n      return FirebaseAnalytics.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return FirebaseAnalytics;\n}(IonicNativePlugin);\n\nexport { FirebaseAnalytics }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvZmlyZWJhc2UtYW5hbHl0aWNzL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztBQUN4RTtBQUtDLElBNkNzQyxxQ0FBaUI7QUFBQztBQUd0RDtBQUN3QjtBQUFNLElBSy9CLG9DQUFRLGFBQUMsSUFBWSxFQUFFLE1BQVc7QUFLUCxJQU0zQixxQ0FBUyxhQUFDLEVBQVU7QUFLUSxJQU81QiwyQ0FBZSxhQUFDLElBQVksRUFBRSxLQUFhO0FBS1QsSUFLbEMsc0NBQVUsYUFBQyxPQUFnQjtBQUtFLElBTTdCLDRDQUFnQixhQUFDLElBQVk7QUFLTSxJQUluQyw4Q0FBa0I7QUFJbUM7QUFBd0Q7QUFBb0U7QUFBd0U7QUFBZ0c7cURBbkUxVixVQUFVOzs7OzBCQUNMO0FBQUMsNEJBcERQO0FBQUUsRUFvRHFDLGlCQUFpQjtBQUN2RCxTQURZLGlCQUFpQjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQGJldGFcbiAqIEBuYW1lIEZpcmViYXNlIEFuYWx5dGljc1xuICogQGRlc2NyaXB0aW9uXG4gKiBDb3Jkb3ZhIHBsdWdpbiBmb3IgRmlyZWJhc2UgQW5hbHl0aWNzXG4gKlxuICogR28gdG8gZmlyZWJhc2UgY29uc29sZSBhbmQgZXhwb3J0IGdvb2dsZS1zZXJ2aWNlcy5qc29uIGFuZCBHb29nbGVTZXJ2aWNlLUluZm8ucGxpc3QuIFB1dCB0aG9zZSBmaWxlcyBpbnRvIHRoZSByb290IG9mIHlvdXIgY29yZG92YSBhcHAgZm9sZGVyLlxuICpcbiAqIE5PVEU6IG9uIGlPUyBpbiBvcmRlciB0byBjb2xsZWN0IGRlbW9ncmFwaGljLCBhZ2UsIGdlbmRlciBkYXRhIGV0Yy4geW91IHNob3VsZCBhZGRpdGlvbmFsbHkgaW5jbHVkZSBBZFN1cHBvcnQuZnJhbWV3b3JrIGludG8geW91ciBwcm9qZWN0LlxuICpcbiAqICMjIFVzaW5nIGNhcGFjaXRvcj9cbiAqIEZvciBBbmRyb2lkIHlvdSdsbCBoYXZlIHRvIGFkZCBpbiBfX2FuZHJvaWQvYXBwL3NyYy9tYWluL0FuZHJvaWRNYW5maWVzdC54bWxfXyB1bmRlciBgPGFwcGxpY2F0aW9uPmBcbiAqIGBgYFxuICogPG1ldGEtZGF0YVxuICogICAgICB0b29sczpyZXBsYWNlPVwiYW5kcm9pZDp2YWx1ZVwiXG4gKiAgICAgIGFuZHJvaWQ6bmFtZT1cImZpcmViYXNlX2FuYWx5dGljc19jb2xsZWN0aW9uX2VuYWJsZWRcIlxuICogICAgICBhbmRyb2lkOnZhbHVlPVwidHJ1ZVwiLz5cbiAqXG4gKiA8bWV0YS1kYXRhXG4gKiAgICAgIHRvb2xzOnJlcGxhY2U9XCJhbmRyb2lkOnZhbHVlXCJcbiAqICAgICAgYW5kcm9pZDpuYW1lPVwiZ29vZ2xlX2FuYWx5dGljc19hdXRvbWF0aWNfc2NyZWVuX3JlcG9ydGluZ19lbmFibGVkXCJcbiAqICAgICAgYW5kcm9pZDp2YWx1ZT1cImZhbHNlXCIvPlxuICogYGBgXG4gKlxuICogQW5kIGluIHRoZSBzYW1lIGZpbGUsIHlvdSdsbCBoYXZlIHRvIGFkZCBgeG1sbnM6dG9vbHM9XCJodHRwOi8vc2NoZW1hcy5hbmRyb2lkLmNvbS90b29sc1wiYCB0byB5b3VyIF9tYW5pZmVzdF8gdGFnLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgRmlyZWJhc2VBbmFseXRpY3MgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2ZpcmViYXNlLWFuYWx5dGljcy9uZ3gnO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGZpcmViYXNlQW5hbHl0aWNzOiBGaXJlYmFzZUFuYWx5dGljcykgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5maXJlYmFzZUFuYWx5dGljcy5sb2dFdmVudCgncGFnZV92aWV3Jywge3BhZ2U6IFwiZGFzaGJvYXJkXCJ9KVxuICogICAudGhlbigocmVzOiBhbnkpID0+IGNvbnNvbGUubG9nKHJlcykpXG4gKiAgIC5jYXRjaCgoZXJyb3I6IGFueSkgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0ZpcmViYXNlQW5hbHl0aWNzJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZmlyZWJhc2UtYW5hbHl0aWNzJyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLmZpcmViYXNlLmFuYWx5dGljcycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vY2hlbWVyaXN1ay9jb3Jkb3ZhLXBsdWdpbi1maXJlYmFzZS1hbmFseXRpY3MnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRmlyZWJhc2VBbmFseXRpY3MgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBMb2dzIGFuIGFwcCBldmVudC5cbiAgICogQmUgYXdhcmUgb2YgYXV0b21hdGljYWxseSBjb2xsZWN0ZWQgZXZlbnRzLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICogQHBhcmFtIHthbnl9IHBhcmFtcyBTb21lIHBhcmFtIHRvIGNvbmZpZ3VyZSBzb21ldGhpbmdcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIGxvZ0V2ZW50KG5hbWU6IHN0cmluZywgcGFyYW1zOiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSB1c2VyIElEIHByb3BlcnR5LlxuICAgKiBUaGlzIGZlYXR1cmUgbXVzdCBiZSB1c2VkIGluIGFjY29yZGFuY2Ugd2l0aCBHb29nbGUncyBQcml2YWN5IFBvbGljeS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGlkIFRoZSB1c2VyIElEXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBzZXRVc2VySWQoaWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoaXMgZmVhdHVyZSBtdXN0IGJlIHVzZWQgaW4gYWNjb3JkYW5jZSB3aXRoIEdvb2dsZSdzIFByaXZhY3kgUG9saWN5LlxuICAgKiBCZSBhd2FyZSBvZiBhdXRvbWF0aWNhbGx5IGNvbGxlY3RlZCB1c2VyIHByb3BlcnRpZXMuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFRoZSBwcm9wZXJ0eSBuYW1lXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBUaGUgcHJvcGVydHkgdmFsdWVcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIHNldFVzZXJQcm9wZXJ0eShuYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIHdoZXRoZXIgYW5hbHl0aWNzIGNvbGxlY3Rpb24gaXMgZW5hYmxlZCBmb3IgdGhpcyBhcHAgb24gdGhpcyBkZXZpY2UuXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gZW5hYmxlZFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcbiAgc2V0RW5hYmxlZChlbmFibGVkOiBib29sZWFuKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgY3VycmVudCBzY3JlZW4gbmFtZSwgd2hpY2ggc3BlY2lmaWVzIHRoZSBjdXJyZW50IHZpc3VhbCBjb250ZXh0IGluIHlvdXIgYXBwLlxuICAgKiBUaGlzIGhlbHBzIGlkZW50aWZ5IHRoZSBhcmVhcyBpbiB5b3VyIGFwcCB3aGVyZSB1c2VycyBzcGVuZCB0aGVpciB0aW1lIGFuZCBob3cgdGhleSBpbnRlcmFjdCB3aXRoIHlvdXIgYXBwLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBUaGUgbmFtZSBvZiB0aGUgc2NyZWVuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBzZXRDdXJyZW50U2NyZWVuKG5hbWU6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENsZWFycyBhbGwgYW5hbHl0aWNzIGRhdGEgZm9yIHRoaXMgaW5zdGFuY2UgZnJvbSB0aGUgZGV2aWNlIGFuZCByZXNldHMgdGhlIGFwcCBpbnN0YW5jZSBJRFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIHJlc2V0QW5hbHl0aWNzRGF0YSgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==","map":null,"metadata":{},"sourceType":"module"}